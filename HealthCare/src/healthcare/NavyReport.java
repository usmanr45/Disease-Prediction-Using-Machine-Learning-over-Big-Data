/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package healthcare;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author EGC
 */
public class NavyReport extends javax.swing.JFrame {

    Connection con;
    Statement st, st1;
    ResultSet rs;
    String bmi;
    public static int stat;
    PreparedStatement ps, ps1;
    String u_name = "root";
    String u_pwd = "";
    String URL = "jdbc:mysql://localhost:3306/";
    String databaseName = "treatment";
    int bavg, aavg, favg;

    /**
     * Creates new form NavyReport
     */
    public NavyReport() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().createImage(getClass().getResource("2.jpg")));
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection(URL + databaseName, u_name, u_pwd);
            st=con.createStatement();
            st.executeUpdate("Truncate table `status`");
            st.executeUpdate("Truncate table `follow`");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jButton3.setBackground(new java.awt.Color(0, 0, 153));
        jButton3.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Next");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(980, 93, 120, 30);

        jLabel4.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Naive Bayes Classification  ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(730, 90, 240, 30);
        jPanel1.add(jTextField2);
        jTextField2.setBounds(950, 520, 160, 30);

        jButton2.setBackground(new java.awt.Color(0, 0, 153));
        jButton2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("NB Classification");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(650, 520, 250, 30);
        jPanel1.add(jTextField1);
        jTextField1.setBounds(340, 520, 150, 30);

        jButton1.setBackground(new java.awt.Color(0, 0, 153));
        jButton1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Calculate over all Result");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(80, 520, 200, 27);

        jTable2.setBackground(new java.awt.Color(0, 0, 0));
        jTable2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(255, 255, 255));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(590, 140, 540, 360);

        jTable1.setBackground(new java.awt.Color(0, 0, 0));
        jTable1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(40, 140, 510, 360);

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Over All Result ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(180, 90, 150, 30);

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DiseasePrediction by Machine Learning over Big Data from Healthcare Communities");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(240, 20, 720, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/3_1.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, -30, 1230, 590);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1151, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            st = con.createStatement();
            int tot = 0, count = 0, avg;
            ResultSet rs = st.executeQuery("SELECT * from data2");
            while (rs.next()) {
                tot = tot + Integer.parseInt(rs.getString(2));
                count++;
            }
            System.out.println("total" + tot);
            System.out.println("count" + count);
            avg = tot / count;
            System.out.println("Avg" + avg);
            rs.close();
            bavg = avg;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        try {
            st1 = con.createStatement();
            int tot1 = 0, count1 = 0, avg1;
            ResultSet rs1 = st1.executeQuery("SELECT * from data2");
            while (rs1.next()) {
                tot1 = tot1 + Integer.parseInt(rs1.getString(9));
                count1++;
            }
            System.out.println("total" + tot1);
            System.out.println("count" + count1);
            avg1 = tot1 / count1;
            System.out.println("Avg" + avg1);
            rs1.close();
            aavg = avg1;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        try {
            Statement st2 = con.createStatement();
            int tot2 = 0, count2 = 0, avg2;
            ResultSet rs2 = st2.executeQuery("SELECT * from data2");
            while (rs2.next()) {
                tot2 = tot2 + Integer.parseInt(rs2.getString(10));
                count2++;
            }
            System.out.println("total" + tot2);
            System.out.println("count" + count2);
            avg2 = tot2 / count2;
            System.out.println("Avg" + avg2);
            rs2.close();
            favg = avg2;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        try {
            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("Patient Name");
            model.addColumn("BMI");
            model.addColumn("SBP");
            model.addColumn("DBP");
            model.addColumn("HDL");
            model.addColumn("TCHOL");
            model.addColumn("TRIGL");
            model.addColumn("BB");
            model.addColumn("ASPRIN");
            model.addColumn("FIBRA");

            jTable1.setModel(model);


            st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM data2");

            int i2 = 0;
            int k = 0;
            int id = 1;


            while (rs.next()) {

                model.insertRow(i2, new Object[]{""});
                String name = rs.getString(1);
                int a = Integer.parseInt(rs.getString(2));
                int b = Integer.parseInt(rs.getString(3));
                int c = Integer.parseInt(rs.getString(4));
                int d = Integer.parseInt(rs.getString(5));
                int e = Integer.parseInt(rs.getString(6));
                float f = Float.parseFloat(rs.getString(7));
                float g = Float.parseFloat(rs.getString(8));
                int h = Integer.parseInt(rs.getString(9));
                int i = Integer.parseInt(rs.getString(10));


                if ((bavg < a || aavg > h || favg > i)) {

                    model.insertRow(i2, new Object[]{""});
                    model.setValueAt(name, i2, 0);
                    model.setValueAt(a, i2, 1);
                    model.setValueAt(b, i2, 2);
                    model.setValueAt(c, i2, 3);
                    model.setValueAt(d, i2, 4);
                    model.setValueAt(e, i2, 5);
                    model.setValueAt(f, i2, 6);
                    model.setValueAt(g, i2, 7);
                    model.setValueAt(h, i2, 8);
                    model.setValueAt(i, i2, 9);
                    i2++;
                    ps = con.prepareStatement("insert into status values(?,?,?,?,?,?,?,?,?,?,?)");
                    ps.setString(1, name);
                    ps.setInt(2, a);
                    ps.setInt(3, b);
                    ps.setInt(4, c);
                    ps.setInt(5, d);
                    ps.setInt(6, e);
                    ps.setFloat(7, f);
                    ps.setFloat(8, g);
                    ps.setInt(9, h);
                    ps.setInt(10, i);
                    ps.setInt(11, id);
                    ps.executeUpdate();
                    k++;
                    id++;
                } else {
                    ps1 = con.prepareStatement("insert into follow values(?,?,?,?,?,?,?,?,?,?)");
                    ps1.setString(1, name);
                    ps1.setInt(2, a);
                    ps1.setInt(3, b);
                    ps1.setInt(4, c);
                    ps1.setInt(5, d);
                    ps1.setInt(6, e);
                    ps1.setFloat(7, f);
                    ps1.setFloat(8, g);
                    ps1.setInt(9, h);
                    ps1.setInt(10, i);
                    ps1.executeUpdate();

                }


            }
            System.out.println("\n Tables" + i2);
            System.out.println("Inserted Successfully");
            JOptionPane.showMessageDialog(this, "Status Patient Report Inserted Successfully");
            jTextField1.setText("" + k);
            stat = k;

        } catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{

            DefaultTableModel model=new DefaultTableModel();
            model.addColumn("Patient Name");
            model.addColumn("BMI");
            model.addColumn("SBP");
            model.addColumn("DBP");
            model.addColumn("HDL");
            model.addColumn("TCHOL");
            model.addColumn("TRIGL");
            model.addColumn("BB");
            model.addColumn("ASPRIN");
            model.addColumn("FIBRA");

            jTable2.setModel(model);

            st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM follow");
            int i=0;
            int u=0;
            while(rs.next()){
                model.insertRow(i, new Object[]{""});
                String name=rs.getString(1);
                int a=Integer.parseInt(rs.getString(2));
                int b=Integer.parseInt(rs.getString(3));
                int c=Integer.parseInt(rs.getString(4));
                int d=Integer.parseInt(rs.getString(5));
                int e=Integer.parseInt(rs.getString(6));

                model.setValueAt(name, i, 0);
                model.setValueAt(a, i, 1);
                model.setValueAt(b, i, 2);
                model.setValueAt(c, i, 3);
                model.setValueAt(d, i, 4);
                model.setValueAt(e, i, 5);
                model.setValueAt(rs.getString(7), i, 6);
                model.setValueAt(rs.getString(8), i, 7);
                model.setValueAt(rs.getString(9), i, 8);
                model.setValueAt(rs.getString(10), i, 9);

                i++;
                u++;

            }
            jTextField2.setText(""+u);
        }
        catch(Exception e){
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         new KNN().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
            new NavyReport().setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NavyReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NavyReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NavyReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NavyReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
